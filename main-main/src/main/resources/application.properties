spring.application.name=Project_NaYo

spring.main.web-application-type=servlet

server.port=9070

# Spring Boot 의 Devtools 에는 classpath 에 속해있는 파일들의 수정을 감시하고
# 자동으로 재시작해주는 기능이 포함되어 있습니다
spring.devtools.livereload.enabled=true
# DataSource setting
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=nayo
spring.datasource.password=nayo
# Logging setting
logging.level.org.hibernate=info
# JPA 설정
spring.jpa.hibernate.ddl-auto=create
# Hibernate의 DDL(Data Definition Language) 자동 실행 옵션을 설정합니다.
# none: Hibernate가 데이터베이스 테이블을 생성하거나 변경하지 않습니다. 이미 존재하는 스키마를 사용합니다.
# create, create-drop, update, validate 옵션도 있음.
spring.jpa.generate-ddl=false
# true로 설정하면 JPA 구현체가 애플리케이션 시작 시점에 데이터베이스 테이블을 자동으로 생성합니다.
# false로 설정하면 이 기능을 비활성화합니다. 
spring.jpa.show-sql=true
# true로 설정하면 JPA 구현체가 실행하는 SQL 쿼리를 콘솔에 출력합니다.
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
# JPA가 사용할 데이터베이스 방언(dialect)을 지정합니다.
# 여기서는 Oracle 10g에 맞는 Hibernate 방언을 사용합니다.
spring.jpa.properties.hibernate.format_sql=true
# true로 설정하면 출력되는 SQL 쿼리를 보기 좋게 포매팅합니다.
# ViewResolver Setting
   spring.mvc.view.prefix=/WEB-INF/board/
   spring.mvc.view.suffix=.jsp
   # Thymeleaf
spring.thymeleaf.cache=false


application change